name: Build and deploy application to Azure AKS Cluster
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  IMAGE_NAME: test-app-front
  SERVICE_NAME: test-app-front
  DOCKERFILE: ./Dockerfile
  MANIFESTFILE: manifests/test-app.yaml

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Login to Azure Container Registry
      uses: Azure/docker-login@v1
      with:
        login-server: ${{ secrets.CONTAINER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
          context: ./
          file: ${{ env.DOCKERFILE }}
          push: true
          tags: "${{ secrets.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          cache-from: type=registry,ref=${{ secrets.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline
          
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Azure authentication
      uses: azure/login@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
    - name: Login to Azure Container Registry
      uses: Azure/docker-login@v1
      with:
        login-server: ${{ secrets.CONTAINER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Set target AKS cluster
      uses: Azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        cluster-name: ${{ secrets.CLUSTER_NAME }}
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        
    - if: github.event_name != 'workflow_dispatch'
      id: file_changes
      uses: trilom/file-changes-action@v1.2.3
      with:
        output: ' '
        
    - if: (github.event_name != 'workflow_dispatch') && contains(steps.file_changes.outputs.files, env.MANIFESTFILE)
      name: Deploy to k8s with manifest
      uses: Azure/k8s-deploy@v1
      with:
        manifests: ${{ env.MANIFESTFILE }}
        namespace: ${{ secrets.MS_NAMESPACE }}
        
    - if: (github.event_name == 'workflow_dispatch') || !(contains(steps.file_changes.outputs.files, env.MANIFESTFILE))
      name: Deploy to k8s
      run: |
        kubectl rollout restart deployment ${{ env.SERVICE_NAME }} --namespace ${{ secrets.MS_NAMESPACE }}
